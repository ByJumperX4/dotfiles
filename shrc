#!/bin/sh
# Please don't use /bin/bash in your scripts, make POSIX shell scripts
#           __          
#      ___ / /  ________
#    _(_-</ _ \/ __/ __/  Made by:
#   (_)__/_//_/_/  \__/ By_JumperX4
#                           

# Set default path (override everything)
PATH=/sbin:/usr/sbin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/pkg/bin:$HOME/.local/bin

# Source global definitions

if [ "$BASH" != "" ]; then
    set -o posix
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

#
# Prompt
#

# Set prompt for bash

PS1='\\$\[$(tput sgr0)\] \w> '

else

# Set prompt for non-bash shells

PS1=$(
    printf "$ "
    if [ "${PWD#$HOME}" != "$PWD" ]; then
      printf "~${PWD#$HOME}"
    else
      printf "$PWD"
    fi
    printf "› "
)

# Set prompt at every cd using an alias
function _cd {
    cd "$@"
    PS1=$(
    printf "\$ "
    if [[ "${PWD#$HOME}" != "$PWD" ]]; then
      printf "~${PWD#$HOME}"
    else
      printf "$PWD"
    fi
    printf "› "
    )    
}

alias cd=_cd

    
fi # Spaghetti but that's all the bloated GNU Bash deserves

if [ -f /etc/profile ]; then
    . /etc/profile
fi   



#
# Variables
#

PATH="$PATH:$HOME/.local/bin" # Use the system's default path, then add some other places for extra commands.
SYSTEMD_PAGER="" # I don't want systemd to open logs in a pager when i'm on a system running systemd.
EDITOR="emacs -nw" # Emacs is my favorite text editor, some prefers to use another text editor but I like that one.
PAGER=less # I use less as pager, it just works.
# Autodetect the number of CPU threads that should be used to compile.
case "$(uname -s)" in
    FreeBSD|OpenBSD)
	cpunum=$(sysctl -n hw.ncpu)
	;;
    Linux)
	cpunum=$(nproc)
	;;
esac
	  
case "$cpunum" in
    1|2)
	export MAKEFLAGS="-j $cpunum"
	;;
    3|4|5)
	export MAKEFLAGS="-j $((cpunum-1))"
	;;
    6|7)
	export MAKEFLAGS="-j $((cpunum-2))"
	;;
    7|8|9|10|11)
	export MAKEFLAGS="-j $((cpunum-3))"
	;;
    *)
	export MAKEFLAGS="-j $((cpunum-cpunum/8))"
esac
QT_QPA_PLATFORMTHEME=qt5ct # QT5 Theme engine.
TERMINAL=xterm # I use XTerm, let whatever needs that variable be aware of that.

# Options/modes

# set -o posix # I want my bash to be posix compliant
#set -o emacs # Emacs is my favourite text editor

#
# Aliases
#

# Coloration in commands, replace some commands with themselves but with arguments to enable colors

alias ip="ip -c"
alias grep="grep --color"

# ls related aliases

alias ls="ls -ah --color" # List all the files in an human-readable way with coloration.
alias l="ls -ahl --color" # Same as above, but instead display one file per line in a detailed way.

# Non-categorized aliases 

alias icat="icat -m 24bit -w 64" # Print an image in the terminal
alias h="fc -l | grep" # Search in history
# Execute command number X from history
function hx {
    eval $(fc -l | grep \^$@ | sed "s/$@//g")
    }
alias vi="emacs -nw" # Replace the vi command with emacs.
alias dvi="doas emacs -nw" # Set dvi to emacs as root.
alias clr="clear" # Use "clr" to clear the terminal, this is shorter.
alias x="exit" # Use "x" to exit, this is shorter.
alias newtor="doas service tor restart" # Restart tor to get a new tor circuit
# Lokinet "VPN" mode
function vpn {
    case "$1" in
	up|on)
	    lokinet-vpn --exit exit.loki --up
	    ;;
	down|off)
	    lokinet-vpn --down
	    ;;
	status)
	    lokinet-vpn --status
	    ;;
    esac
    }

#
# Autostart
#

# Run X11 if in the first TTY. Supports GNU/Linux, FreeBSD and OpenBSD. Not tested on others
if [ "$(tty)" = "/dev/tty1" ] || [ "$(tty)" =  "/dev/ttyv0" ] || [ "$(tty)" = "/dev/ttyC0" ]; then
    startx
# Start tmux if it hasn't already been started
elif [ "$TMUX" = "" ] && [ "$(whoami)" != "root" ]; then
    # If you want tmux
#    tmux new -s $RANDOM && exit
    &
fi


# Display a fortune cookie told by a cow
fortune | cowsay

# End.
